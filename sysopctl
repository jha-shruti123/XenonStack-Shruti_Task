#!/bin/bash

# Version of the script
VERSION="v0.1.0"

# Function to display help
function show_help() {
    echo "Usage: sysopctl [command] [options]"
    echo ""
    echo "Commands:"
    echo "  service list            List all services"
    echo "  service start <name>    Start a service"
    echo "  service stop <name>     Stop a service"
    echo "  system load             Show system load"
    echo "  disk usage              Show disk usage"
    echo "  process monitor         Monitor processes"
    echo "  logs analyse            Analyze logs"
    echo "  backup <source> <dest>  Backup the specified source path to the destination"
    echo ""
    echo "Options:"
    echo "  --help                  Show this help message"
    echo "  --version               Show version information"
}

# Function to display version
function show_version() {
    echo "sysopctl version $VERSION"
}

# Check for no arguments
if [ $# -eq 0 ]; then
    show_help
    exit 1
fi

# Parse the command
case "$1" in
    service)
        case "$2" in
            list)
                systemctl list-units --type=service
                ;;
            start)
                if [ -z "$3" ]; then
                    echo "Error: Service name required."
                    exit 1
                fi
                systemctl start "$3"
                ;;
            stop)
                if [ -z "$3" ]; then
                    echo "Error: Service name required."
                    exit 1
                fi
                systemctl stop "$3"
                ;;
            *)
                echo "Error: Unknown service command '$2'."
                show_help
                exit 1
                ;;
        esac
        ;;
    system)
        if [ "$2" == "load" ]; then
            uptime
        else
            echo "Error: Unknown system command '$2'."
            show_help
            exit 1
        fi
        ;;
    disk)
        if [ "$2" == "usage" ]; then
            df -h
        else
            echo "Error: Unknown disk command '$2'."
            show_help
            exit 1
        fi
        ;;
    process)
        if [ "$2" == "monitor" ]; then
            htop
        else
            echo "Error: Unknown process command '$2'."
            show_help
            exit 1
        fi
        ;;
    logs)
        if [ "$2" == "analyse" ]; then
            journalctl
        else
            echo "Error: Unknown logs command '$2'."
            show_help
            exit 1
        fi
        ;;
    backup)
        if [ -z "$2" ] || [ -z "$3" ]; then
            echo "Error: Both source and destination paths are required."
            exit 1
        fi
        SOURCE_PATH="$2"
        DESTINATION_PATH="$3"

        echo "Starting backup of '$SOURCE_PATH' to '$DESTINATION_PATH'..."
        rsync -av --progress "$SOURCE_PATH" "$DESTINATION_PATH"
        echo "Backup completed."
        ;;
    --help)
        show_help
        ;;
    --version)
        show_version
        ;;
    *)
        echo "Error: Unknown command '$1'."
        show_help
        exit 1
        ;;
esac

